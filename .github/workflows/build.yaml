name: build

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.ref == 'refs/heads/master' && github.run_id || github.head_ref || github.ref }}-${{ github.workflow }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 16
        cache: 'yarn'

    - run: yarn install --immutable --immutable-cache --check-cache
    - run: yarn build:development

    - name: Run unit tests
      run: yarn test-ci

    - name: Run puppeteer tests
      run: yarn test-puppeteer-build

  bundle_size:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: preactjs/compressed-size-action@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          build-script: build:production
          pattern: "./build/static/js/*.js"
          strip-hash: "\\b\\w{8}\\."
          minimum-change-threshold: 100

  lighthouse:
    runs-on: ubuntu-20.04
    if: github.repository == 'commaai/connect' && (github.ref == 'refs/heads/master' || github.event_name != 'push')
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'

      - run: yarn install --immutable --immutable-cache --check-cache
      - run: yarn build:production

      - name: run Lighthouse CI
        run: |
          npm install -g @lhci/cli@0.9.x
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

  docker:
    runs-on: ubuntu-20.04
    needs: [test, bundle_size]
    if: github.repository == 'commaai/connect'
    permissions:
      packages: write
      contents: read
    steps:
    - uses: actions/checkout@v3
    - id: buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: login to container registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - id: meta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/commaai/connect
        tags: |
          type=ref,event=branch
          type=raw,${{ github.sha }}
          type=raw,enable=${{ github.event_name == 'pull_request' }},value=${{ github.head_ref }}

    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        build-args: SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
        builder: ${{ steps.buildx.outputs.name }}
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new

    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
