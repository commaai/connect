name: build

on: [push, workflow_dispatch]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref != 'refs/heads/master' && github.ref || github.run_id }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3

    - name: Setup Node 16
      uses: actions/setup-node@v3
      with:
        node-version: 16
        check-latest: true
        cache: 'yarn'

    - name: Install dependencies
      run: yarn install --immutable --immutable-cache --check-cache

    - name: Build development
      run: yarn build:development

    - name: Run unit tests
      run: yarn test-ci

    - name: Run puppeteer tests
      run: yarn test-puppeteer-build

  lighthouse:
    runs-on: ubuntu-20.04
    if: github.repository == 'commaai/connect'
    steps:
    - uses: actions/checkout@v3

    - name: Setup Node 16
      uses: actions/setup-node@v3
      with:
        node-version: 16
        check-latest: true
        cache: 'yarn'

    - name: Install dependencies
      run: yarn install --immutable --immutable-cache --check-cache

    - name: Build production
      run: yarn build:production

    - name: run Lighthouse CI
      run: |
        npm install -g @lhci/cli@0.9.x
        lhci autorun
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

  docker:
    runs-on: ubuntu-20.04
    needs: [test, lighthouse]
    if: github.repository == 'commaai/connect'
    permissions:
      packages: write
      contents: read
    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: login to container registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: get tags
      shell: bash
      run: echo "##[set-output name=tags;]ghcr.io/commaai/connect:${GITHUB_SHA},ghcr.io/commaai/connect:${GITHUB_REF#refs/heads/}$(if [ ${GITHUB_REF} = refs/heads/master ] ; then echo ,ghcr.io/commaai/connect:latest; fi;)"
      id: extract_tags

    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        build-args: SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
        builder: ${{ steps.buildx.outputs.name }}
        context: .
        push: true
        tags: ${{ steps.extract_tags.outputs.tags }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new

    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
